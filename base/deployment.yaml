apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-auth-api
  labels:
    app: go-auth-api
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0 # Ensures zero-downtime deployments
  selector:
    matchLabels:
      app: go-auth-api
  template:
    metadata:
      labels:
        app: go-auth-api
    spec:
      # Security context to run as non-root
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      containers:
        - name: api
          image: ghcr.io/pakornbank/go-backend-example/go-auth-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: SERVER_PORT
              value: "8080"
          # Load configuration from ConfigMap and Secrets
          envFrom:
            - configMapRef:
                name: go-auth-config
            - secretRef:
                name: go-auth-secrets
          # Resource limits to prevent one pod from consuming all cluster resources
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          # Health checks to ensure pod is ready to receive traffic
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          # Additional security measures
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
